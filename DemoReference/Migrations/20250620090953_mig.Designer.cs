// <auto-generated />
using DemoReference.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoReference.Migrations
{
    [DbContext(typeof(TestDBConext))]
    [Migration("20250620090953_mig")]
    partial class mig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoReference.Models.Builder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Builders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jhon",
                            Patronymic = "Jhonson",
                            SecondName = "Jhons"
                        });
                });

            modelBuilder.Entity("DemoReference.Models.BuilderJobDuties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuilderId")
                        .HasColumnType("int");

                    b.Property<int>("JobDutiesId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuilderId");

                    b.HasIndex("JobDutiesId");

                    b.HasIndex("UserId");

                    b.ToTable("BuilderJobDuties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuilderId = 1,
                            JobDutiesId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("DemoReference.Models.JobDuties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobDuties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "job 1 desc",
                            Name = "job 1"
                        });
                });

            modelBuilder.Entity("DemoReference.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            Password = "1",
                            Role = 1
                        });
                });

            modelBuilder.Entity("DemoReference.Models.BuilderJobDuties", b =>
                {
                    b.HasOne("DemoReference.Models.Builder", "Builder")
                        .WithMany()
                        .HasForeignKey("BuilderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoReference.Models.JobDuties", "JobDuties")
                        .WithMany()
                        .HasForeignKey("JobDutiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoReference.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Builder");

                    b.Navigation("JobDuties");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
